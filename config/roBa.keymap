#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
    tapping-term-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_ALT Q     &kp W  &kp E  &kp R  &kp T                                     &kp Y            &kp U              &kp I  &kp O  &kp P
&kp A              &kp S  &kp D  &kp F  &kp TAB  &kp A           &kp RIGHT_GUI    &kp H            &mt RIGHT_SHIFT J  &kp K  &kp L  &kp BACKSPACE
&mt LEFT_SHIFT Z   &kp X  &kp C  &kp V  &kp B    &mo 6           &kp GLOBE        &kp N            &kp M              &kp G  &none  &kp ENTER
&ext_power EP_TOG  &kp X  &none  &mo 5  &mo 1    &kp LEFT_WIN    &mt RCTRL SPACE  &kp RIGHT_SHIFT                                   &mkp MB1
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&none         &none           &kp UP_ARROW    &none            &none                              &trans          &trans    &trans                &kp LS(LG(NUMBER_4))   &kp LS(LG(NUMBER_5))
&kp ESC       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(V)  &none        &trans     &mkp MB2        &mkp MB1  &trans                &trans                 &kp DELETE
&none         &none           &none           &mkp MB1         &mkp MB2   &kp LA(Z)    &trans     &trans          &trans    &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &kp LS(LG(NUMBER_2))
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &trans           &trans     &trans       &kp LANG2  &kp LANGUAGE_1                                                         &kp LG(LS(NUMBER_2))
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                 &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))    &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                  &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                     &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW  &kp LC(SQT)              &kp SLASH                       &kp BACKSLASH  &kp SEMICOLON  &kp SQT       &kp MINUS         &kp EQUAL
&kp NUMBER_1    &kp NUMBER_2            &kp NUMBER_3  &kp NUMBER_4             &kp NUMBER_5  &trans    &trans  &kp NUMBER_6   &kp N7         &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans        &kp LG(LS(RIGHT_ARROW))  &trans        &trans    &trans  &kp GRAVE      &kp COMMA      &kp PERIOD    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans          &trans                  &trans        &trans                   &trans        &trans    &trans  &trans                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans        &trans        &trans        &kp SQT       &kp SLASH                       &kp BACKSLASH  &kp SEMICOLON  &kp SQT       &kp MINUS         &kp EQUAL
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans    &trans  &kp NUMBER_6   &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &kp GRAVE      &kp COMMA      &kp PERIOD    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_6 {
            bindings = <
&trans        &trans                  &kp LS(LG(UP_ARROW))    &trans                   &trans                         &trans  &kp LA(LS(B))       &kp LA(UP_ARROW)  &kp LA(LS(C))        &trans
&trans        &kp LS(LG(LEFT_ARROW))  &kp LS(LG(DOWN_ARROW))  &kp LS(LG(RIGHT_ARROW))  &trans  &trans    &trans       &trans  &kp LA(LEFT_ARROW)  &kp LA(LS(A))     &kp LA(RIGHT_ARROW)  &trans
&trans        &trans                  &trans                  &trans                   &trans  &trans    &bootloader  &trans  &trans              &trans            &trans               &kp LS(LG(NUMBER_2))
&bt BT_SEL 0  &bt BT_SEL 1            &bt BT_SEL 2            &trans                   &trans  &trans    &trans       &trans                                                             &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LS(LG(C_AC_SCROLL_UP)) LG(C_AC_SCROLL_DOWN)>;
        };
    };
};
